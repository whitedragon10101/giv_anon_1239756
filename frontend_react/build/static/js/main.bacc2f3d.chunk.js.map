{"version":3,"sources":["components/Applications/index.js","App.js","index.js"],"names":["Applications","state","user_id_loggedin","error","isLoaded","application_data","this","getNewData","a","axios","get","response","setState","data","application_id","stage","direction","user_id","console","log","packets","put","then","catch","alert","event","target","value","message","Fragment","id","htmlFor","type","onChange","e","changeLoggedInUserId","className","map","application","name","charity_name","country_name","created_at","onClick","moveApplication","Component","App","element","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"qQAiGeA,E,4MA3FXC,MAAQ,CACJC,iBAAkB,EAClBC,MAAO,KACPC,UAAU,EACVC,iBAAkB,I,uDAItB,WAEIC,KAAKC,e,+DAGT,4BAAAC,EAAA,sEAEYC,IAAMC,IAAI,iCAFtB,OACUC,EADV,OAGML,KAAKM,SAAS,CACZR,UAAU,EACVC,iBAAkBM,EAASE,OALnC,gD,mFASA,SAAgBC,EAAeC,EAAMC,GAEjCD,EAAsB,YAAdC,EAA0BD,EAAM,EAAIA,EAAM,EAElD,IAAME,EAAUX,KAAKL,MAAMC,iBAE3BgB,QAAQC,IAAI,aAAcF,EAAQ,YAAYF,EAAM,qBAAsBD,GAE1E,IAAMM,EAAU,CACZH,QAAUA,EACVF,MAAOA,GAEXN,IAAMY,IAAI,wBAAwBP,EAAgBM,GAC7CE,KAEGhB,KAAKC,cAERgB,OAAM,SAAApB,GACHe,QAAQC,IAAI,WAAWhB,EAAMQ,SAASE,MACtCW,MAAM,WAAWrB,EAAMQ,SAASE,W,kCAK5C,SAAqBY,GAEjBnB,KAAKM,SAAS,CAACV,iBAAkBuB,EAAMC,OAAOC,U,oBAGlD,WAAU,IAAD,OACL,EAAgErB,KAAKL,MAA7DE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,iBAAkBH,EAA3C,EAA2CA,iBAC3C,OAAIC,EACK,0CAAaA,EAAMyB,WAChBxB,EAKR,eAAC,IAAMyB,SAAP,WAEA,sBAAKC,GAAG,uBAAR,UACA,uBAAOC,QAAQ,gBAAf,+CACA,uBAAOD,GAAG,gBAAgBE,KAAK,OAAOL,MAAOzB,EAAkB+B,SAAU,SAACC,GAAD,OAAK,EAAKC,qBAAqBD,SAGxG,sBAAKE,UAAU,aAAf,UAEI,iDAAyB,4CAAqB,+CAAuB,kDAA0B,oDAA4B,+CAAuB,uCACjJ/B,EAAiBgC,KAAI,SAAAC,GAAW,OACjC,eAAC,IAAMT,SAAP,WACI,gCAAMS,EAAYxB,eAAlB,QACA,gCAAMwB,EAAYC,KAAlB,QACA,gCAAMD,EAAYE,aAAlB,OACA,gCAAMF,EAAYG,aAAlB,OACA,oCAAOH,EAAYvB,MAAnB,OACA,oCAAOuB,EAAYI,WAAnB,OACA,oCAAM,wBAAQC,QAAS,kBAAI,EAAKC,gBAAgBN,EAAYxB,eAAewB,EAAYvB,MAAM,SAAvF,kBAAN,QAA0H,wBAAQ4B,QAAS,kBAAI,EAAKC,gBAAgBN,EAAYxB,eAAewB,EAAYvB,MAAM,YAAvF,qBAA1H,SAPiBuB,EAAYxB,yBAfhC,iD,GA1DU+B,aCSZC,MAVf,WAEI,OACI,eAAC,IAAMjB,SAAP,WACI,2DACA,cAAC,EAAD,QCFNkB,EAAW,cAAC,IAAMC,WAAP,UAAkB,cAAC,EAAD,MAEnCC,IAASC,OAAOH,EAAQI,SAASC,eAAe,W","file":"static/js/main.bacc2f3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\n\n\nclass Applications extends Component \n{\n    state = {  \n        user_id_loggedin: 4,\n        error: null,\n        isLoaded: false,\n        application_data: []\n\n    }\n\n    componentDidMount() \n    {\n        this.getNewData();\n    }\n\n    async getNewData(){\n        const response =\n          await axios.get(\"api/application/getMixedData/\")\n          this.setState({\n            isLoaded: true,\n            application_data: response.data\n          });\n    }\n\n    moveApplication(application_id,stage,direction)\n    {\n        stage = direction === 'forward' ? stage+1 : stage-1;\n       \n        const user_id = this.state.user_id_loggedin;\n\n        console.log('user_id = '+ user_id+' stage = '+stage+' application id = '+ application_id)\n\n        const packets = {\n            user_id:  user_id,\n            stage: stage,\n        };\n        axios.put('api/application/move/'+application_id, packets)\n            .then(\n                //response => alert(JSON.stringify(response.data))\n                this.getNewData()\n                )\n            .catch(error => {\n                console.log(\"ERROR:: \",error.response.data);\n                alert(\"ERROR:: \"+error.response.data);\n                });\n\n    }\n\n    changeLoggedInUserId(event)\n    {\n        this.setState({user_id_loggedin: event.target.value });        \n    }\n\n    render() { \n        const { error, isLoaded, application_data, user_id_loggedin } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <div>Loading...</div>;\n        } else {\n\n          return (\n            <React.Fragment>\n            \n            <div id=\"user_input_container\">\n            <label htmlFor=\"user_id_input\">Simulating this User ID Logged In</label>\n            <input id=\"user_id_input\" type='text' value={user_id_loggedin} onChange={(e)=>this.changeLoggedInUserId(e)}/>\n            </div>\n           \n            <div className=\"data_table\">\n\n                <div>Application ID</div><div >User Name</div><div>Charity Name</div><div>Charity Country</div><div>Application Stage</div><div>Date created</div><div>Move</div>\n                {application_data.map(application => (\n                <React.Fragment key={application.application_id}>\n                    <div>{application.application_id}  </div>\n                    <div>{application.name}  </div>\n                    <div>{application.charity_name} </div>\n                    <div>{application.country_name} </div>\n                    <div> {application.stage} </div>\n                    <div> {application.created_at} </div>\n                    <div> <button onClick={()=>this.moveApplication(application.application_id,application.stage,'back')}>Back</button> &nbsp;<button onClick={()=>this.moveApplication(application.application_id,application.stage,'forward')}>Forward</button> </div>\n                </React.Fragment>\n                ))}\n\n            </div>     \n            </React.Fragment>\n\n          );\n\n        }\n      }\n}\n \nexport default Applications; ","import React from 'react';\nimport Applications from './components/Applications';\n\nfunction App()\n{\n    return(\n        <React.Fragment>\n            <h1>GivingForce Demo Frontend</h1>\n            <Applications/>\n        </React.Fragment>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst element =  <React.StrictMode><App /></React.StrictMode>;\n\nReactDOM.render(element,document.getElementById('root'));\n"],"sourceRoot":""}